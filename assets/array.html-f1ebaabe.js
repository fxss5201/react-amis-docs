import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as r,c as u,a as n,b as a,d as e,e as t}from"./app-e6e2cbb0.js";const c={},i={href:"https://jimu.fxss.work/#/outside/arrayFilter",target:"_blank",rel:"noopener noreferrer"},l=t(`<p><strong>注意：过滤器参数中不能包含空格，过滤器参数默认是字符串，如果是从数据域中取值，可以使用 <code>\${}</code>，默认取出来的值会是字符串形式的，可以使用 <code>toJson</code> 转化为对应的格式（Array、Object），当前函数只能传字符串 <code>(val)=&gt;val</code>。</strong></p><h2 id="f-chunk" tabindex="-1"><a class="header-anchor" href="#f-chunk" aria-hidden="true">#</a> f_chunk</h2><h3 id="说明" tabindex="-1"><a class="header-anchor" href="#说明" aria-hidden="true">#</a> 说明</h3><p>将数组（array）拆分成多个 <code>size</code> 长度的区块，并将这些区块组成一个新数组。 如果 <code>array</code> 无法被分割成全部等长的区块，那么最后剩余的元素将组成一个区块。</p><h3 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h3><ol><li><code>array</code> (Array): 需要处理的数组</li><li><code>[size=1]</code> (number): 每个数组区块的长度</li></ol><h3 id="返回" tabindex="-1"><a class="header-anchor" href="#返回" aria-hidden="true">#</a> 返回</h3><p>(Array): 返回一个包含拆分区块的新数组（注：相当于一个二维数组）。</p><h3 id="例子" tabindex="-1"><a class="header-anchor" href="#例子" aria-hidden="true">#</a> 例子</h3><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>...
<span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;array&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;d&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
...
<span class="token property">&quot;tpl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\${array|json}: \${array|f_chunk|json}&quot;</span><span class="token punctuation">,</span> <span class="token comment">// [ &quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot; ]: [ [ &quot;a&quot; ], [ &quot;b&quot; ], [ &quot;c&quot; ], [ &quot;d&quot; ] ]</span>
<span class="token property">&quot;tpl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\${array|json}: \${array|f_chunk:2|json}&quot;</span><span class="token punctuation">,</span> <span class="token comment">// [ &quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot; ]: [ [ &quot;a&quot;, &quot;b&quot; ], [ &quot;c&quot;, &quot;d&quot; ] ]</span>
<span class="token property">&quot;tpl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\${array|json}: \${array|f_chunk:3|json}&quot;</span><span class="token punctuation">,</span> <span class="token comment">// [ &quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot; ]: [ [ &quot;a&quot;, &quot;b&quot;, &quot;c&quot; ], [ &quot;d&quot; ] ]</span>
...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="f-compact" tabindex="-1"><a class="header-anchor" href="#f-compact" aria-hidden="true">#</a> f_compact</h2><h3 id="说明-1" tabindex="-1"><a class="header-anchor" href="#说明-1" aria-hidden="true">#</a> 说明</h3><p>创建一个新数组，包含原数组中所有的非假值元素。例如 <code>false</code>, <code>null</code>, <code>0</code>, <code>&quot;&quot;</code>, <code>undefined</code>, 和 <code>NaN</code> 都是被认为是“假值”。</p><h3 id="参数-1" tabindex="-1"><a class="header-anchor" href="#参数-1" aria-hidden="true">#</a> 参数</h3><ol><li><code>array</code> (Array): 待处理的数组</li></ol><h3 id="返回-1" tabindex="-1"><a class="header-anchor" href="#返回-1" aria-hidden="true">#</a> 返回</h3><p>(Array): 返回过滤掉假值的新数组。</p><h3 id="例子-1" tabindex="-1"><a class="header-anchor" href="#例子-1" aria-hidden="true">#</a> 例子</h3><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>...
<span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;array&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> &#39;&#39;<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
...
<span class="token property">&quot;tpl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\${array|json}: \${array|f_compact|json}&quot;</span><span class="token punctuation">,</span> <span class="token comment">// [ 0, 1, false, 2, &quot;&quot;, 3 ]: [ 1, 2, 3 ]</span>
...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="f-concat" tabindex="-1"><a class="header-anchor" href="#f-concat" aria-hidden="true">#</a> f_concat</h2><h3 id="说明-2" tabindex="-1"><a class="header-anchor" href="#说明-2" aria-hidden="true">#</a> 说明</h3><p>创建一个新数组，将<code>array</code>与任何数组 或 值连接在一起。</p><h3 id="参数-2" tabindex="-1"><a class="header-anchor" href="#参数-2" aria-hidden="true">#</a> 参数</h3><ol><li><code>array</code> (Array): 被连接的数组</li><li><code>[values]</code> (...*): 连接的值。</li></ol><h3 id="返回-2" tabindex="-1"><a class="header-anchor" href="#返回-2" aria-hidden="true">#</a> 返回</h3><p>(Array): 返回连接后的新数组。</p><h3 id="例子-2" tabindex="-1"><a class="header-anchor" href="#例子-2" aria-hidden="true">#</a> 例子</h3><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>...
<span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;array&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;array1&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
...
<span class="token property">&quot;tpl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\${array|json}: \${array|f_concat:2:[3]:[[4]]|json}&quot;</span><span class="token punctuation">,</span> <span class="token comment">// [ 1 ]: [ 1, 2, [ 3 ], [ [ 4 ] ] ]</span>
<span class="token property">&quot;tpl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\${array|json}: \${array|f_concat:\${array1|toJson}|json}&quot;</span><span class="token punctuation">,</span> <span class="token comment">// [ 1 ]: [ 1, 2, 3 ]</span>
...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="f-difference" tabindex="-1"><a class="header-anchor" href="#f-difference" aria-hidden="true">#</a> f_difference</h2><h3 id="说明-3" tabindex="-1"><a class="header-anchor" href="#说明-3" aria-hidden="true">#</a> 说明</h3>`,30),d=n("code",null,"array",-1),q=n("code",null,"array",-1),k={href:"https://262.ecma-international.org/6.0/#sec-samevaluezero",target:"_blank",rel:"noopener noreferrer"},v=t(`<h3 id="参数-3" tabindex="-1"><a class="header-anchor" href="#参数-3" aria-hidden="true">#</a> 参数</h3><ol><li><code>array</code> (Array): 要检查的数组。</li><li><code>[values]</code> (...Array): 排除的值。</li></ol><h3 id="返回-3" tabindex="-1"><a class="header-anchor" href="#返回-3" aria-hidden="true">#</a> 返回</h3><p>(Array): 返回一个过滤值后的新数组。</p><h3 id="例子-3" tabindex="-1"><a class="header-anchor" href="#例子-3" aria-hidden="true">#</a> 例子</h3><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>...
<span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;array&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;array1&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;array2&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
...
<span class="token property">&quot;tpl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\${array|json}: \${array|f_difference:[2,4]|json}&quot;</span><span class="token punctuation">,</span> <span class="token comment">// [ 1, 2, 3, 4, 5 ]: [ 1, 3, 5 ]</span>
<span class="token property">&quot;tpl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\${array|json}: \${array|f_difference:\${array1|toJson}:\${array2|toJson}|json}&quot;</span><span class="token punctuation">,</span> <span class="token comment">// [ 1, 2, 3, 4, 5 ]: [ 1, 5 ]</span>
...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="f-differenceby" tabindex="-1"><a class="header-anchor" href="#f-differenceby" aria-hidden="true">#</a> f_differenceBy</h2><h3 id="说明-4" tabindex="-1"><a class="header-anchor" href="#说明-4" aria-hidden="true">#</a> 说明</h3><p>这个过滤器类似<code>f_difference</code> ，除了它接受一个 <code>iteratee</code> （注：迭代器）， 调用 <code>array</code> 和 <code>values</code> 中的每个元素以产生比较的标准。 结果值是从第一数组中选择。<code>iteratee</code> 会调用一个参数：<code>(value)</code>。（注：首先使用迭代器分别迭代 <code>array</code> 和 <code>values</code> 中的每个元素，返回的值作为比较值）。</p><h3 id="参数-4" tabindex="-1"><a class="header-anchor" href="#参数-4" aria-hidden="true">#</a> 参数</h3><ol><li><code>array</code> (Array): 要检查的数组。</li><li><code>[values]</code> (...Array): 排除的值。</li><li>[iteratee=_.identity] (Function): iteratee 调用每个元素。</li></ol><h3 id="返回-4" tabindex="-1"><a class="header-anchor" href="#返回-4" aria-hidden="true">#</a> 返回</h3><p>(Array): 返回一个过滤值后的新数组。</p><h3 id="例子-4" tabindex="-1"><a class="header-anchor" href="#例子-4" aria-hidden="true">#</a> 例子</h3><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>...
<span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;array&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token number">3.1</span><span class="token punctuation">,</span>
    <span class="token number">2.2</span><span class="token punctuation">,</span>
    <span class="token number">1.3</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;array1&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token number">4.4</span><span class="token punctuation">,</span>
    <span class="token number">2.5</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;array2&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;x&quot;</span><span class="token operator">:</span> <span class="token number">2</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;x&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;array3&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;x&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
...
<span class="token property">&quot;tpl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\${array|json}: \${array|f_differenceBy:\${array1|toJson}:&#39;Math.floor&#39;|json}&quot;</span><span class="token punctuation">,</span> <span class="token comment">// [ 3.1, 2.2, 1.3 ]: [ 3.1, 1.3 ]</span>
<span class="token property">&quot;tpl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\${array|json}: \${array|f_differenceBy:\${array1|toJson}:&#39;(val)=&gt;Math.ceil(val)&#39;|json}&quot;</span><span class="token punctuation">,</span> <span class="token comment">// [ 3.1, 2.2, 1.3 ]: [ 3.1, 1.3 ]</span>
<span class="token property">&quot;tpl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\${array2|json}: \${array2|f_differenceBy:\${array3|toJson}:&#39;(val)=&gt;val.x&#39;|json}&quot;</span><span class="token punctuation">,</span> <span class="token comment">// [ { &quot;x&quot;: 2 }, { &quot;x&quot;: 1 } ]: [ { &quot;x&quot;: 2 } ]</span>
<span class="token property">&quot;tpl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\${array2|json}: \${array2|f_differenceBy:\${array3|toJson}:x|json}&quot;</span><span class="token punctuation">,</span> <span class="token comment">// [ { &quot;x&quot;: 2 }, { &quot;x&quot;: 1 } ]: [ { &quot;x&quot;: 2 } ]</span>
...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="f-drop" tabindex="-1"><a class="header-anchor" href="#f-drop" aria-hidden="true">#</a> f_drop</h2><h3 id="说明-5" tabindex="-1"><a class="header-anchor" href="#说明-5" aria-hidden="true">#</a> 说明</h3><p>创建一个切片数组，去除<code>array</code>前面的<code>n</code>个元素。（n默认值为1。）</p><h3 id="参数-5" tabindex="-1"><a class="header-anchor" href="#参数-5" aria-hidden="true">#</a> 参数</h3><ol><li><code>array</code> (Array): 要查询的数组。</li><li><code>[n=1]</code> (number): 要去除的元素个数。</li></ol><h3 id="返回-5" tabindex="-1"><a class="header-anchor" href="#返回-5" aria-hidden="true">#</a> 返回</h3><p>(Array): 返回array剩余切片。</p><h3 id="例子-5" tabindex="-1"><a class="header-anchor" href="#例子-5" aria-hidden="true">#</a> 例子</h3><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>...
<span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;array&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token number">3</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
...
<span class="token property">&quot;tpl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\${[1,2,3]|json}: \${[1,2,3]|f_drop|json}&quot;</span><span class="token punctuation">,</span> <span class="token comment">// [ 1, 2, 3 ]: [ 2, 3 ]</span>
<span class="token property">&quot;tpl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\${array|json}: \${array|f_drop:2|json}&quot;</span><span class="token punctuation">,</span> <span class="token comment">// [ 1, 2, 3 ]: [ 3 ]</span>
...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="f-dropright" tabindex="-1"><a class="header-anchor" href="#f-dropright" aria-hidden="true">#</a> f_dropRight</h2><h3 id="说明-6" tabindex="-1"><a class="header-anchor" href="#说明-6" aria-hidden="true">#</a> 说明</h3><p>创建一个切片数组，去除<code>array</code>尾部的<code>n</code>个元素。（n默认值为1。）</p><h3 id="参数-6" tabindex="-1"><a class="header-anchor" href="#参数-6" aria-hidden="true">#</a> 参数</h3><ol><li><code>array</code> (Array): 要查询的数组。</li><li><code>[n=1]</code> (number): 要去除的元素个数。</li></ol><h3 id="返回-6" tabindex="-1"><a class="header-anchor" href="#返回-6" aria-hidden="true">#</a> 返回</h3><p>(Array): 返回array剩余切片。</p><h3 id="例子-6" tabindex="-1"><a class="header-anchor" href="#例子-6" aria-hidden="true">#</a> 例子</h3><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>...
<span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;array&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token number">3</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
...
<span class="token property">&quot;tpl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\${[1,2,3]|json}: \${[1,2,3]|f_dropRight|json}&quot;</span><span class="token punctuation">,</span> <span class="token comment">// [ 1, 2, 3 ]: [ 1, 2 ]</span>
<span class="token property">&quot;tpl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\${array|json}: \${array|f_dropRight:2|json}&quot;</span><span class="token punctuation">,</span> <span class="token comment">// [ 1, 2, 3 ]: [ 1 ]</span>
...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="f-droprightwhile" tabindex="-1"><a class="header-anchor" href="#f-droprightwhile" aria-hidden="true">#</a> f_dropRightWhile</h2><h3 id="说明-7" tabindex="-1"><a class="header-anchor" href="#说明-7" aria-hidden="true">#</a> 说明</h3><p>创建一个切片数组，去除<code>array</code>中从 <code>predicate</code> 返回假值开始到尾部的部分。predicate 会传入3个参数： (value, index, array)。</p><h3 id="参数-7" tabindex="-1"><a class="header-anchor" href="#参数-7" aria-hidden="true">#</a> 参数</h3><ol><li><code>array</code> (Array): 要查询的数组。</li><li><code>[predicate=_.identity]</code> (Function): 这个函数会在每一次迭代调用。</li></ol><h3 id="返回-7" tabindex="-1"><a class="header-anchor" href="#返回-7" aria-hidden="true">#</a> 返回</h3><p>(Array): 返回array剩余切片。</p><h3 id="例子-7" tabindex="-1"><a class="header-anchor" href="#例子-7" aria-hidden="true">#</a> 例子</h3><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>...
<span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;array&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span> <span class="token property">&quot;user&quot;</span><span class="token operator">:</span> <span class="token string">&quot;barney&quot;</span><span class="token punctuation">,</span>  <span class="token property">&quot;active&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token property">&quot;user&quot;</span><span class="token operator">:</span> <span class="token string">&quot;fred&quot;</span><span class="token punctuation">,</span>    <span class="token property">&quot;active&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token property">&quot;user&quot;</span><span class="token operator">:</span> <span class="token string">&quot;pebbles&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;active&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;array1&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;active&quot;</span><span class="token punctuation">,</span>
    <span class="token boolean">false</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
...
<span class="token property">&quot;tpl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\${array|json}: \${array|f_dropRightWhile:&#39;(val)=&gt;!val.active&#39;|json}&quot;</span><span class="token punctuation">,</span> <span class="token comment">// [ { &quot;user&quot;: &quot;barney&quot;, &quot;active&quot;: true }, { &quot;user&quot;: &quot;fred&quot;, &quot;active&quot;: false }, { &quot;user&quot;: &quot;pebbles&quot;, &quot;active&quot;: false } ]: [ { &quot;user&quot;: &quot;barney&quot;, &quot;active&quot;: true } ]</span>
<span class="token property">&quot;tpl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\${array|json}: \${array|f_dropRightWhile:\${array|nth:2|toJson}|json}&quot;</span><span class="token punctuation">,</span> <span class="token comment">// [ { &quot;user&quot;: &quot;barney&quot;, &quot;active&quot;: true }, { &quot;user&quot;: &quot;fred&quot;, &quot;active&quot;: false }, { &quot;user&quot;: &quot;pebbles&quot;, &quot;active&quot;: false } ]: [ { &quot;user&quot;: &quot;barney&quot;, &quot;active&quot;: true }, { &quot;user&quot;: &quot;fred&quot;, &quot;active&quot;: false } ]</span>
<span class="token property">&quot;tpl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\${array|json}: \${array|f_dropRightWhile:\${array1|toJson}|json}&quot;</span><span class="token punctuation">,</span> <span class="token comment">// [ { &quot;user&quot;: &quot;barney&quot;, &quot;active&quot;: true }, { &quot;user&quot;: &quot;fred&quot;, &quot;active&quot;: false }, { &quot;user&quot;: &quot;pebbles&quot;, &quot;active&quot;: false } ]: [ { &quot;user&quot;: &quot;barney&quot;, &quot;active&quot;: true } ]</span>
<span class="token property">&quot;tpl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\${array|json}: \${array|f_dropRightWhile:active|json}&quot;</span><span class="token punctuation">,</span> <span class="token comment">// [ { &quot;user&quot;: &quot;barney&quot;, &quot;active&quot;: true }, { &quot;user&quot;: &quot;fred&quot;, &quot;active&quot;: false }, { &quot;user&quot;: &quot;pebbles&quot;, &quot;active&quot;: false } ]: [ { &quot;user&quot;: &quot;barney&quot;, &quot;active&quot;: true }, { &quot;user&quot;: &quot;fred&quot;, &quot;active&quot;: false }, { &quot;user&quot;: &quot;pebbles&quot;, &quot;active&quot;: false } ]</span>
...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="f-dropwhile" tabindex="-1"><a class="header-anchor" href="#f-dropwhile" aria-hidden="true">#</a> f_dropWhile</h2><h3 id="说明-8" tabindex="-1"><a class="header-anchor" href="#说明-8" aria-hidden="true">#</a> 说明</h3><p>创建一个切片数组，去除<code>array</code>中从起点开始到 <code>predicate</code> 返回假值结束部分。predicate 会传入3个参数： (value, index, array)。</p><h3 id="参数-8" tabindex="-1"><a class="header-anchor" href="#参数-8" aria-hidden="true">#</a> 参数</h3><ol><li><code>array</code> (Array): 要查询的数组。</li><li><code>[predicate=_.identity]</code> (Function): 这个函数会在每一次迭代调用。</li></ol><h3 id="返回-8" tabindex="-1"><a class="header-anchor" href="#返回-8" aria-hidden="true">#</a> 返回</h3><p>(Array): 返回array剩余切片。</p><h3 id="例子-8" tabindex="-1"><a class="header-anchor" href="#例子-8" aria-hidden="true">#</a> 例子</h3><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>...
<span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;array&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;user&quot;</span><span class="token operator">:</span> <span class="token string">&quot;barney&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;active&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;user&quot;</span><span class="token operator">:</span> <span class="token string">&quot;fred&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;active&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;user&quot;</span><span class="token operator">:</span> <span class="token string">&quot;pebbles&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;active&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;obj1&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;user&quot;</span><span class="token operator">:</span> <span class="token string">&quot;barney&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;active&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;array1&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;active&quot;</span><span class="token punctuation">,</span>
    <span class="token boolean">false</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
...
<span class="token property">&quot;tpl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\${array|json}: \${array|f_dropWhile:&#39;(val)=&gt;!val.active&#39;|json}&quot;</span><span class="token punctuation">,</span> <span class="token comment">// [ { &quot;user&quot;: &quot;barney&quot;, &quot;active&quot;: false }, { &quot;user&quot;: &quot;fred&quot;, &quot;active&quot;: false }, { &quot;user&quot;: &quot;pebbles&quot;, &quot;active&quot;: true } ]: [ { &quot;user&quot;: &quot;pebbles&quot;, &quot;active&quot;: true } ]</span>
<span class="token property">&quot;tpl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\${array|json}: \${array|f_dropWhile:\${obj1|toJson}|json}&quot;</span><span class="token punctuation">,</span> <span class="token comment">// [ { &quot;user&quot;: &quot;barney&quot;, &quot;active&quot;: false }, { &quot;user&quot;: &quot;fred&quot;, &quot;active&quot;: false }, { &quot;user&quot;: &quot;pebbles&quot;, &quot;active&quot;: true } ]: [ { &quot;user&quot;: &quot;fred&quot;, &quot;active&quot;: false }, { &quot;user&quot;: &quot;pebbles&quot;, &quot;active&quot;: true } ]</span>
<span class="token property">&quot;tpl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\${array|json}: \${array|f_dropWhile:\${array1|toJson}|json}&quot;</span><span class="token punctuation">,</span> <span class="token comment">// [ { &quot;user&quot;: &quot;barney&quot;, &quot;active&quot;: false }, { &quot;user&quot;: &quot;fred&quot;, &quot;active&quot;: false }, { &quot;user&quot;: &quot;pebbles&quot;, &quot;active&quot;: true } ]: [ { &quot;user&quot;: &quot;pebbles&quot;, &quot;active&quot;: true } ]</span>
<span class="token property">&quot;tpl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\${array|json}: \${array|f_dropWhile:active|json}&quot;</span><span class="token punctuation">,</span> <span class="token comment">// [ { &quot;user&quot;: &quot;barney&quot;, &quot;active&quot;: false }, { &quot;user&quot;: &quot;fred&quot;, &quot;active&quot;: false }, { &quot;user&quot;: &quot;pebbles&quot;, &quot;active&quot;: true } ]: [ { &quot;user&quot;: &quot;barney&quot;, &quot;active&quot;: false }, { &quot;user&quot;: &quot;fred&quot;, &quot;active&quot;: false }, { &quot;user&quot;: &quot;pebbles&quot;, &quot;active&quot;: true } ]</span>
...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="f-fill" tabindex="-1"><a class="header-anchor" href="#f-fill" aria-hidden="true">#</a> f_fill</h2><h3 id="说明-9" tabindex="-1"><a class="header-anchor" href="#说明-9" aria-hidden="true">#</a> 说明</h3><p>使用 <code>value</code> 值来填充（替换） <code>array</code>，从<code>start</code>位置开始, 到<code>end</code>位置结束（但不包含<code>end</code>位置）。</p><p><strong>注意：这个方法会改变 <code>array</code>（注：不是创建新数组）。</strong></p><h3 id="参数-9" tabindex="-1"><a class="header-anchor" href="#参数-9" aria-hidden="true">#</a> 参数</h3><ol><li><code>array</code> (Array): 要填充改变的数组。</li><li><code>value</code> (*): 填充给 array 的值。</li><li><code>[start=0]</code> (number): 开始位置（默认0）。</li><li><code>[end=array.length]</code> (number):结束位置（默认array.length）。</li></ol><h3 id="返回-9" tabindex="-1"><a class="header-anchor" href="#返回-9" aria-hidden="true">#</a> 返回</h3><p>(Array): 返回array。</p><h3 id="例子-9" tabindex="-1"><a class="header-anchor" href="#例子-9" aria-hidden="true">#</a> 例子</h3><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>...
<span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;array&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
...
<span class="token property">&quot;tpl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\${array|json}: \${array|f_fill:a|json}&quot;</span><span class="token punctuation">,</span> <span class="token comment">// [ 1, 2, 3 ]: [ &quot;a&quot;, &quot;a&quot;, &quot;a&quot; ]</span>
<span class="token property">&quot;tpl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\${array|json}&quot;</span><span class="token punctuation">,</span> <span class="token comment">// [ &quot;a&quot;, &quot;a&quot;, &quot;a&quot; ]</span>
<span class="token property">&quot;tpl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\${[4, 6, 8, 10]|json}: \${[4, 6, 8, 10]|f_fill:*:1:3|json}&quot;</span><span class="token punctuation">,</span> <span class="token comment">// [ 4, 6, 8, 10 ]: [ 4, &quot;*&quot;, &quot;*&quot;, 10 ]</span>
...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,61);function h(b,m){const s=p("ExternalLinkIcon");return r(),u("div",null,[n("p",null,[n("a",i,[a("展示示例"),e(s)]),a(" 。")]),l,n("p",null,[a("创建一个具有唯一"),d,a("值的数组，每个值不包含在其他给定的数组中。（注：即创建一个新数组，这个数组中的值，为第一个数字（"),q,a(" 参数）排除了给定数组中的值。）该方法使用"),n("a",k,[a("SameValueZero"),e(s)]),a("做相等比较。结果值的顺序是由第一个数组中的顺序确定。")]),v])}const g=o(c,[["render",h],["__file","array.html.vue"]]);export{g as default};
